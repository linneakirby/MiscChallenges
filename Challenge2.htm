<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="author" content="some guy"/>
<style type="text/css">
<!--
  h1 { font-family: sans-serif; font-weight: bold; font-size: 11pt; }
   p { font-family: sans-serif; font-weight: normal; font-size: 11pt; }
 .s1 { font-family: sans-serif; font-weight: bold; font-size: 11pt; }
 .s2 { font-family: sans-serif; font-weight: normal; font-size: 11pt; }
  -->
</style>
</head>
<body>
<h1>Challenge 2</h1>
<p>Solution design is an extremely important aspect of software engineering. Given a task, can you organize your solution in a comprehensible, unambiguous, and efficient manner such that development can progress quickly and that non-technical people can still understand your solution? Your proposed design should include <b>what </b>the design is and <b>why </b>you chose to do it that way.<br/>Cipher Tech has recently come into possession of a large amount of reports in PDF format. The reports contain data that will be used to populate a SQL database for a demo of a new tool. Unfortunately, manually extracting all of the required data points would either take too many people or too much time, and of course doing manual extraction on this set of reports wouldn’t help with future sets. Therefore, you have been asked to design a tool to automate this task. To aid you with this, the PDFs will be first run through a converter which converts PDF documents to HTML format. The database will be constructed at a later time, so you won’t need to handle that step.<br/>Keep in mind that while this is sure to be a fun challenge to actually implement, all submitted code will be disregarded. You may use whatever format(s) you desire to effectively and efficiently convey your design; however your response <b>must </b>include a text portion explaining your design. . Included is an example HTML document (Challenge2.htm) made from this challenge. You’ll notice that it doesn’t include many of the data points you’ll be responsible for, so be sure to consider your solution carefully.<br/>The reports will contain text from which we want to extract various data points. Your program must be able to initially extract IP addresses, proper names, 10 digit phone numbers, email addresses, and URLs. You will also be responsible for coming up with the output format, though it is recommended that you use a common/standard format.<br/>You will need to be able to identify data points in basic text, as well as tables, like the one below.</p>
<table border="1" cellspacing="0" style="border-collapse:collapse">
<tr>
<td>
<p class="s1">Name</p>
</td>
<td>
<p class="s1">Address</p>
</td>
<td>
<p class="s1">Phone</p>
</td>
</tr>
<tr>
<td>
<p class="s2">Cipher Tech MD</p>
</td>
<td>
<p class="s2">6810 Deerpath Rd., Suite 415,</p>
<p class="s2">Elkridge, MD 21075</p>
</td>
<td>
<p class="s2">888-948-8324</p>
</td>
</tr>
<tr>
<td>
<p class="s2">Cipher Tech Boston</p>
</td>
<td>
<p class="s2">20 Park Plaza, Suite 528,</p>
<p class="s2">Boston, MA 02116</p>
</td>
<td><p class="s2">888-948-8324</p>
</td>
</tr>
</table>
<p>In an effort to reduce ongoing dependence on developers, your program must be able create, update, and delete data points. For example, if a new set of reports contained times like “9:45 PM”, your program would need to be able add this new data point. You will be responsible for deciding how this will work. Similarly, if a data point’s detection turns out to be suboptimal, your program needs to support updating it. For example, adding the ability to detect times of the format “<b>PM </b>9:45”. Finally, if a particular data point is no longer needed, your program should support removing it. For each of these three operations, your program should not require recompilation (requiring a restart is acceptable).</p>
</body>
</html>
